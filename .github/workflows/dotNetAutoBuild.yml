
name: Android Studio MUI from JetBrains (Auto)

on:
  push:
    branches: [ "development", "master" ]
  pull_request:
    branches: [ "development" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: 设置 Release 信息
      run: |
        echo "TAG_NAME=Actions_$(date +'%Y-%b-%d')_$(date +'%s')" >> $GITHUB_ENV
        echo "RELEASE_NAME=${{ github.event.repository.name }}_Actions_$(date +'%Y-%b-%d')" >> $GITHUB_ENV
        echo $TAG_NAME
        echo $RELEASE_NAME

    - name: 设置下载URi
      run: |
        echo "DOWN_URI=https://download.jetbrains.com/idea/ideaIU-2024.3.4.1.win.zip" >> $GITHUB_ENV

    - name: 显示当前下载URi
      run: |
        echo "The URi is ${{ env.DOWN_URI }} !"

    - name: 设置目标版本号
      run: |
        echo "Target_Ver_Str=" >> $GITHUB_ENV
    
    - name: 安装.NET
      uses: actions/setup-dotnet@v4
        
    - name: 构建HttpCompressionFileExtractor
      run: |
        cd ./HttpCompressionFileExtractor/HttpCompressionFileExtractor.Cli
        dotnet publish --configuration=Release --framework=net8.0 --runtime=linux-x64 --output=$HOME/HttpCompressionFileExtractor /p:PublishSingleFile=true
        ls $HOME/HttpCompressionFileExtractor

    - name: 构建JetbrainsPluginVersionModifier
      run: |
        cd ./JetbrainsPluginVersionModifier/JetbrainsPluginVersionModifier
        dotnet publish --configuration=Release --framework=net8.0 --runtime=linux-x64 --output=$HOME/JetbrainsPluginVersionModifier /p:PublishSingleFile=true
        ls $HOME/JetbrainsPluginVersionModifier

    - name: 运行HttpCompressionFileExtractor与JetbrainsPluginVersionModifier
      run: |
        cd $HOME/HttpCompressionFileExtractor
        ./HttpCompressionFileExtractor.Cli list --url=${{ env.DOWN_URI }} --search=localization-\\w+\\.jar --isRegex=true --isWebApi=true > $HOME/HttpCompressionFileExtractor.json
        cat $HOME/HttpCompressionFileExtractor.json | jq -c '.data[]' | while read item; do
          fullName=$(echo "$item" | jq -r '.fullName')
          ./HttpCompressionFileExtractor.Cli download --url=${{ env.DOWN_URI }} --path=$fullName --output=$HOME/outputs/$fullName --isWebApi=true
        done
        
        $HOME/JetbrainsPluginVersionModifier/JetbrainsPluginVersionModifier --path=$HOME/outputs --isWebApi=true > $HOME/JetbrainsPluginVersionModifier.json
        cat $HOME/JetbrainsPluginVersionModifier.json | jq -c '.data[]' | while read item; do
          sinceVersion=$(echo "$item" | jq -r '.sinceVersion')
          path=$(echo "$item" | jq -r '.path')
          dirname=$(dirname "$path")
          basename=$(basename "$path" .jar)
          newPath="$dirname/${basename}_${sinceVersion}.jar"
          mv "$path" "$newPath"
          echo "$newPath" >> $HOME/outputs/files_to_upload.txt
        done
        
    - name: 创建发布标记
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: ${{ env.RELEASE_NAME }}
        draft: false
        prerelease: false

    - name: 上传最终产物
      id: find_and_upload_files
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        while IFS= read -r file; do
          echo "Uploading $file"
          basename=$(basename "$file" .jar)
          GITHUB_UPLOAD_URL=${{ steps.create_release.outputs.upload_url }}
          GITHUB_UPLOAD_URL="${GITHUB_UPLOAD_URL%\{*}"
          GITHUB_UPLOAD_URL="${GITHUB_UPLOAD_URL%\?*}"
          curl \
            -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"${file}" \
            "${GITHUB_UPLOAD_URL}?name=${basename}.jar&label=${{ env.TAG_NAME }}_${basename}.jar"
        done < $HOME/outputs/files_to_upload.txt

